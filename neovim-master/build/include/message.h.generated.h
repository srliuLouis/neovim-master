#define DEFINE_FUNC_ATTRIBUTES
#include "nvim/func_attr.h"
#undef DEFINE_FUNC_ATTRIBUTES
void msg_grid_set_pos(int row, _Bool scrolled);
_Bool msg_use_grid(void);
void msg_grid_validate(void);
int msg(char_u *s);
int verb_msg(char *s);
int msg_attr(const char *s, const int attr) FUNC_ATTR_NONNULL_ARG(1);
void msg_multiline_attr(const char *s, int attr, _Bool check_int, _Bool *need_clear) FUNC_ATTR_NONNULL_ALL;
_Bool msg_attr_keep(char_u *s, int attr, _Bool keep, _Bool multiline) FUNC_ATTR_NONNULL_ALL;
char_u *msg_strtrunc(char_u *s, int force );
void trunc_string(char_u *s, char_u *buf, int room_in, int buflen);
int smsg(char *s, ...) FUNC_ATTR_PRINTF(1, 2);
int smsg_attr(int attr, char *s, ...) FUNC_ATTR_PRINTF(2, 3);
int smsg_attr_keep(int attr, char *s, ...) FUNC_ATTR_PRINTF(2, 3);
void reset_last_sourcing(void);
void msg_source(int attr);
int emsg_not_now(void);
_Bool emsg(const char_u *s);
void emsg_invreg(int name);
_Bool emsgf(const char *const fmt, ...) FUNC_ATTR_PRINTF(1, 2);
_Bool emsgf_multiline(const char *const fmt, ...);
void iemsg(const char *s);
void iemsgf(const char *s, ...);
void internal_error(char *where);
void msg_schedule_emsgf(const char *const fmt, ...) FUNC_ATTR_PRINTF(1, 2);
char_u *msg_trunc_attr(char_u *s, int force, int attr);
char_u *msg_may_trunc(int force, char_u *s);
void clear_hl_msg(HlMessage *hl_msg);
void add_hl_msg_hist(HlMessage hl_msg);
int delete_first_msg(void);
void ex_messages(void *const eap_p) FUNC_ATTR_NONNULL_ALL;
void msg_end_prompt(void);
void wait_return(int redraw);
void set_keep_msg(char_u *s, int attr);
void msg_ext_set_kind(const char *msg_kind);
void msg_start(void);
void msg_starthere(void);
void msg_putchar(int c);
void msg_putchar_attr(int c, int attr);
void msg_outnum(long n);
void msg_home_replace(char_u *fname);
void msg_home_replace_hl(char_u *fname);
int msg_outtrans(char_u *str);
int msg_outtrans_attr(const char_u *str, int attr);
int msg_outtrans_len(const char_u *str, int len);
char_u *msg_outtrans_one(char_u *p, int attr);
int msg_outtrans_len_attr(const char_u *msgstr, int len, int attr);
void msg_make(char_u *arg);
int msg_outtrans_special(const char_u *strstart, _Bool from, int maxlen );
char *str2special_save(const char *const str, const _Bool replace_spaces, const _Bool replace_lt) FUNC_ATTR_NONNULL_ALL FUNC_ATTR_WARN_UNUSED_RESULT FUNC_ATTR_MALLOC FUNC_ATTR_NONNULL_RET;
const char *str2special(const char **const sp, const _Bool replace_spaces, const _Bool replace_lt) FUNC_ATTR_NONNULL_ALL FUNC_ATTR_WARN_UNUSED_RESULT FUNC_ATTR_NONNULL_RET;
void str2specialbuf(const char *sp, char *buf, size_t len) FUNC_ATTR_NONNULL_ALL;
void msg_prt_line(char_u *s, int list);
void msg_puts(const char *s);
void msg_puts_title(const char *s);
void msg_puts_long_attr(char_u *longstr, int attr);
void msg_puts_long_len_attr(char_u *longstr, int len, int attr);
void msg_puts_attr(const char *const s, const int attr);
void msg_puts_attr_len(const char *const str, const ptrdiff_t len, int attr) FUNC_ATTR_NONNULL_ALL;
void msg_printf_attr(const int attr, const char *const fmt, ...) FUNC_ATTR_NONNULL_ARG(2) FUNC_ATTR_PRINTF(2, 3);
_Bool message_filtered(char_u *msg);
int msg_scrollsize(void);
_Bool msg_use_msgsep(void);
_Bool msg_do_throttle(void);
void msg_scroll_up(_Bool may_throttle);
void msg_scroll_flush(void);
void msg_reset_scroll(void);
void may_clear_sb_text(void);
void sb_text_start_cmdline(void);
void sb_text_end_cmdline(void);
void clear_sb_text(int all);
void show_sb_text(void);
void msg_sb_eol(void);
int msg_use_printf(void);
void msg_moremsg(int full);
void repeat_message(void);
void msg_clr_eos(void);
void msg_clr_eos_force(void);
void msg_clr_cmdline(void);
int msg_end(void);
void msg_ext_ui_flush(void);
void msg_ext_flush_showmode(void);
void msg_ext_clear(_Bool force);
void msg_ext_clear_later(void);
void msg_ext_check_clear(void);
_Bool msg_ext_is_visible(void);
void msg_check(void);
int redirecting(void);
void verbose_enter(void);
void verbose_leave(void);
void verbose_enter_scroll(void);
void verbose_leave_scroll(void);
void verbose_stop(void);
int verbose_open(void);
void give_warning(char_u *message, _Bool hl) FUNC_ATTR_NONNULL_ARG(1);
void give_warning2(char_u *const message, char_u *const a1, _Bool hl);
void msg_advance(int col);
int do_dialog(int type, char_u *title, char_u *message, char_u *buttons, int dfltbutton, char_u *textfield, int ex_cmd );
void display_confirm_msg(void);
int vim_dialog_yesno(int type, char_u *title, char_u *message, int dflt);
int vim_dialog_yesnocancel(int type, char_u *title, char_u *message, int dflt);
int vim_dialog_yesnoallcancel(int type, char_u *title, char_u *message, int dflt);
#include "nvim/func_attr.h"
