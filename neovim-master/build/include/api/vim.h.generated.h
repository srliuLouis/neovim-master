#define DEFINE_FUNC_ATTRIBUTES
#include "nvim/func_attr.h"
#undef DEFINE_FUNC_ATTRIBUTES
void api_vim_init(void) FUNC_API_NOEXPORT;
void api_vim_free_all_mem(void) FUNC_API_NOEXPORT;
String nvim_exec(String src, Boolean output, Error *err) FUNC_API_SINCE(7);
void nvim_command(String command, Error *err) FUNC_API_SINCE(1);
Dictionary nvim_get_hl_by_name(String name, Boolean rgb, Error *err) FUNC_API_SINCE(3);
Dictionary nvim_get_hl_by_id(Integer hl_id, Boolean rgb, Error *err) FUNC_API_SINCE(3);
Integer nvim_get_hl_id_by_name(String name) FUNC_API_SINCE(7);
Dictionary nvim__get_hl_defs(Integer ns_id, Error *err);
void nvim_set_hl(Integer ns_id, String name, Dictionary val, Error *err) FUNC_API_SINCE(7);
void nvim__set_hl_ns(Integer ns_id, Error *err) FUNC_API_FAST;
void nvim_feedkeys(String keys, String mode, Boolean escape_csi) FUNC_API_SINCE(1);
Integer nvim_input(String keys) FUNC_API_SINCE(1) FUNC_API_FAST;
void nvim_input_mouse(String button, String action, String modifier, Integer grid, Integer row, Integer col, Error *err) FUNC_API_SINCE(6) FUNC_API_FAST;
String nvim_replace_termcodes(String str, Boolean from_part, Boolean do_lt, Boolean special) FUNC_API_SINCE(1);
Object nvim_eval(String expr, Error *err) FUNC_API_SINCE(1);
Object nvim_exec_lua(String code, Array args, Error *err) FUNC_API_SINCE(7) FUNC_API_REMOTE_ONLY;
Object nvim_notify(String msg, Integer log_level, Dictionary opts, Error *err) FUNC_API_SINCE(7);
Object nvim_call_function(String fn, Array args, Error *err) FUNC_API_SINCE(1);
Object nvim_call_dict_function(Object dict, String fn, Array args, Error *err) FUNC_API_SINCE(4);
Integer nvim_strwidth(String text, Error *err) FUNC_API_SINCE(1);
ArrayOf(String) nvim_list_runtime_paths(void) FUNC_API_SINCE(1);
ArrayOf(String) nvim_get_runtime_file(String name, Boolean all, Error *err) FUNC_API_SINCE(7) FUNC_API_FAST;
String nvim__get_lib_dir(void);
void nvim_set_current_dir(String dir, Error *err) FUNC_API_SINCE(1);
String nvim_get_current_line(Error *err) FUNC_API_SINCE(1);
void nvim_set_current_line(String line, Error *err) FUNC_API_SINCE(1) FUNC_API_CHECK_TEXTLOCK;
void nvim_del_current_line(Error *err) FUNC_API_SINCE(1) FUNC_API_CHECK_TEXTLOCK;
Object nvim_get_var(String name, Error *err) FUNC_API_SINCE(1);
void nvim_set_var(String name, Object value, Error *err) FUNC_API_SINCE(1);
void nvim_del_var(String name, Error *err) FUNC_API_SINCE(1);
Object nvim_get_vvar(String name, Error *err) FUNC_API_SINCE(1);
void nvim_set_vvar(String name, Object value, Error *err) FUNC_API_SINCE(6);
Object nvim_get_option(String name, Error *err) FUNC_API_SINCE(1);
Dictionary nvim_get_all_options_info(Error *err) FUNC_API_SINCE(7);
Dictionary nvim_get_option_info(String name, Error *err) FUNC_API_SINCE(7);
void nvim_set_option(uint64_t channel_id, String name, Object value, Error *err) FUNC_API_SINCE(1);
void nvim_echo(Array chunks, Boolean history, Dictionary opts, Error *err) FUNC_API_SINCE(7);
void nvim_out_write(String str) FUNC_API_SINCE(1);
void nvim_err_write(String str) FUNC_API_SINCE(1);
void nvim_err_writeln(String str) FUNC_API_SINCE(1);
ArrayOf(Buffer) nvim_list_bufs(void) FUNC_API_SINCE(1);
Buffer nvim_get_current_buf(void) FUNC_API_SINCE(1);
void nvim_set_current_buf(Buffer buffer, Error *err) FUNC_API_SINCE(1) FUNC_API_CHECK_TEXTLOCK;
ArrayOf(Window) nvim_list_wins(void) FUNC_API_SINCE(1);
Window nvim_get_current_win(void) FUNC_API_SINCE(1);
void nvim_set_current_win(Window window, Error *err) FUNC_API_SINCE(1) FUNC_API_CHECK_TEXTLOCK;
Buffer nvim_create_buf(Boolean listed, Boolean scratch, Error *err) FUNC_API_SINCE(6);
Integer nvim_open_term(Buffer buffer, Dictionary opts, Error *err) FUNC_API_SINCE(7);
void nvim_chan_send(Integer chan, String data, Error *err) FUNC_API_SINCE(7) FUNC_API_REMOTE_ONLY FUNC_API_LUA_ONLY;
Window nvim_open_win(Buffer buffer, Boolean enter, Dictionary config, Error *err) FUNC_API_SINCE(6) FUNC_API_CHECK_TEXTLOCK;
ArrayOf(Tabpage) nvim_list_tabpages(void) FUNC_API_SINCE(1);
Tabpage nvim_get_current_tabpage(void) FUNC_API_SINCE(1);
void nvim_set_current_tabpage(Tabpage tabpage, Error *err) FUNC_API_SINCE(1) FUNC_API_CHECK_TEXTLOCK;
Integer nvim_create_namespace(String name) FUNC_API_SINCE(5);
Dictionary nvim_get_namespaces(void) FUNC_API_SINCE(5);
Boolean nvim_paste(String data, Boolean crlf, Integer phase, Error *err) FUNC_API_SINCE(6) FUNC_API_CHECK_TEXTLOCK;
void nvim_put(ArrayOf(String) lines, String type, Boolean after, Boolean follow, Error *err) FUNC_API_SINCE(6) FUNC_API_CHECK_TEXTLOCK;
void nvim_subscribe(uint64_t channel_id, String event) FUNC_API_SINCE(1) FUNC_API_REMOTE_ONLY;
void nvim_unsubscribe(uint64_t channel_id, String event) FUNC_API_SINCE(1) FUNC_API_REMOTE_ONLY;
Integer nvim_get_color_by_name(String name) FUNC_API_SINCE(1);
Dictionary nvim_get_color_map(void) FUNC_API_SINCE(1);
Dictionary nvim_get_context(Dictionary opts, Error *err) FUNC_API_SINCE(6);
Object nvim_load_context(Dictionary dict) FUNC_API_SINCE(6);
Dictionary nvim_get_mode(void) FUNC_API_SINCE(2) FUNC_API_FAST;
ArrayOf(Dictionary) nvim_get_keymap(String mode) FUNC_API_SINCE(3);
void nvim_set_keymap(String mode, String lhs, String rhs, Dictionary opts, Error *err) FUNC_API_SINCE(6);
void nvim_del_keymap(String mode, String lhs, Error *err) FUNC_API_SINCE(6);
Dictionary nvim_get_commands(Dictionary opts, Error *err) FUNC_API_SINCE(4);
Array nvim_get_api_info(uint64_t channel_id) FUNC_API_SINCE(1) FUNC_API_FAST FUNC_API_REMOTE_ONLY;
void nvim_set_client_info(uint64_t channel_id, String name, Dictionary version, String type, Dictionary methods, Dictionary attributes, Error *err) FUNC_API_SINCE(4) FUNC_API_REMOTE_ONLY;
Dictionary nvim_get_chan_info(Integer chan, Error *err) FUNC_API_SINCE(4);
Array nvim_list_chans(void) FUNC_API_SINCE(4);
Array nvim_call_atomic(uint64_t channel_id, Array calls, Error *err) FUNC_API_SINCE(1) FUNC_API_REMOTE_ONLY;
Dictionary nvim_parse_expression(String expr, String flags, Boolean highlight, Error *err) FUNC_API_SINCE(4) FUNC_API_FAST;
Object nvim__id(Object obj);
Array nvim__id_array(Array arr);
Dictionary nvim__id_dictionary(Dictionary dct);
Float nvim__id_float(Float flt);
Dictionary nvim__stats(void);
Array nvim_list_uis(void) FUNC_API_SINCE(4);
Array nvim_get_proc_children(Integer pid, Error *err) FUNC_API_SINCE(4);
Object nvim_get_proc(Integer pid, Error *err) FUNC_API_SINCE(4);
void nvim_select_popupmenu_item(Integer item, Boolean insert, Boolean finish, Dictionary opts, Error *err) FUNC_API_SINCE(6);
Array nvim__inspect_cell(Integer grid, Integer row, Integer col, Error *err);
void nvim__screenshot(String path) FUNC_API_FAST;
void nvim_set_decoration_provider(Integer ns_id, DictionaryOf(LuaRef) opts, Error *err) FUNC_API_SINCE(7) FUNC_API_LUA_ONLY;
#include "nvim/func_attr.h"
